<Window x:Class="KGuiV2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
        xmlns:local="clr-namespace:KGuiV2"
        xmlns:behaviors="clr-namespace:KGuiV2.Helpers.Behaviors"
        x:Name="AppWindow"
        Height="425"
        Width="270"
        ResizeMode="CanMinimize"
        Background="#FFF0F0F0"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:CallMethodAction MethodName="OnWindowClosing" TargetObject="{Binding Path=DataContext, ElementName=AppWindow, Mode=OneWay}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <FrameworkElement.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="Window.Title" Value="RAM Test (KGui)"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RamtestIsRunning, Mode=OneWay}" Value="True"/>
                        <Condition Binding="{Binding RamtestStopOnTaskScope, Mode=OneWay}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Window.Title" Value="{Binding Path=RamtestFinishedIn, Mode=OneWay, StringFormat='ETR: {0:hh\\:mm\\:ss}', ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </FrameworkElement.Style>
    <Grid>
        <TabControl Margin="5,5,5,5">
            <TabItem Header="Testing">
                <DockPanel>
                    <GroupBox DockPanel.Dock="Top" Header="System" HorizontalAlignment="Stretch" Margin="5,0,5,0">
                        <DockPanel Margin="5,5,5,5">
                            <Grid DockPanel.Dock="Top">
                                <TextBlock Text="Total Memory:" HorizontalAlignment="Left"/>
                                <TextBlock HorizontalAlignment="Right" Text="{Binding SystemMemoryTotal, Mode=OneWay, StringFormat='{}{0:G} MB', ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"/>
                            </Grid>
                            <Grid DockPanel.Dock="Top">
                                <TextBlock Text="Free Memory:" HorizontalAlignment="Left"/>
                                <TextBlock HorizontalAlignment="Right" Text="{Binding SystemMemoryFree, Mode=OneWay, StringFormat='{}{0:G} MB', ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}">
                                    <FrameworkElement.ToolTip>
                                        <ToolTip ContentStringFormat='{}{0:N0}% Total Memory' Content="{Binding SystemMemoryFreePercentage, Mode=OneWay, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"/>
                                    </FrameworkElement.ToolTip>
                                </TextBlock>
                            </Grid>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox DockPanel.Dock="Top" Header="Settings" HorizontalAlignment="Stretch" Margin="5,0,5,0">
                        <DockPanel Margin="5,5,5,5">
                            <Grid DockPanel.Dock="Top" Margin="0,0,0,2">
                                <TextBlock Text="Test Size (MB):" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <TextBox x:Name="TestSizeBox" Width="70" HorizontalAlignment="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" IsEnabled="{Binding RamtestIsRunning, Converter={StaticResource InverseBooleanConverter}}">
                                    <FrameworkElement.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Text" Value="{Binding RamtestMegabytes, Mode=TwoWay, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RamtestMegabytes, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=0}" Value="False">
                                                    <Setter Property="Control.Background" Value="LightPink"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </FrameworkElement.Style>
                                    <i:Interaction.Behaviors>
                                        <behaviors:NumericTextBoxBehavior/>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                            </Grid>
                            <Grid DockPanel.Dock="Top" Margin="0,0,0,2">
                                <TextBlock Text="CPU Threads:" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <TextBox Width="70" HorizontalAlignment="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" IsEnabled="{Binding RamtestIsRunning, Converter={StaticResource InverseBooleanConverter}}">
                                    <FrameworkElement.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Text" Value="{Binding RamtestThreads, Mode=TwoWay, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="0">
                                                    <Setter Property="Control.Background" Value="LightPink"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </FrameworkElement.Style>
                                    <i:Interaction.Behaviors>
                                        <behaviors:NumericTextBoxBehavior/>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                            </Grid>
                            <Grid DockPanel.Dock="Top" Margin="0,0,0,5">
                                <TextBlock Text="Test Scope (%):" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <FrameworkElement.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Setter Property="Control.Foreground" Value="Gray"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RamtestStopOnTaskScope, Mode=OneWay}" Value="True">
                                                    <Setter Property="Control.Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </FrameworkElement.Style>
                                </TextBlock>
                                <TextBox x:Name="TaskScope" Width="70" HorizontalAlignment="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" IsEnabled="{Binding RamtestAllowTaskScope}">
                                    <FrameworkElement.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Text" Value="{Binding RamtestTaskScope, Mode=TwoWay, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="0">
                                                    <Setter Property="Control.Background" Value="LightPink"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </FrameworkElement.Style>
                                    <i:Interaction.Behaviors>
                                        <behaviors:NumericTextBoxBehavior/>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                            </Grid>
                            <CheckBox DockPanel.Dock="Top" Margin="0,0,0,1" Content="Stop on Error" IsChecked="{Binding RamtestStopOnError, Mode=TwoWay}" IsEnabled="{Binding RamtestIsRunning, Converter={StaticResource InverseBooleanConverter}}"/>
                            <CheckBox DockPanel.Dock="Top" Content="Stop on Test Scope" IsChecked="{Binding RamtestStopOnTaskScope, Mode=TwoWay}" IsEnabled="{Binding RamtestIsRunning, Converter={StaticResource InverseBooleanConverter}}"/>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox DockPanel.Dock="Top" Header="Status" HorizontalAlignment="Stretch" Margin="5,0,5,0">
                        <DockPanel Margin="5,5,5,5">
                            <Grid DockPanel.Dock="Top" Margin="0,0,0,1">
                                <TextBlock Text="Duration:" HorizontalAlignment="Left"/>
                                <TextBlock HorizontalAlignment="Right" Text="{Binding RamtestDuration, Mode=OneWay, StringFormat='d\\:hh\\:mm\\:ss', ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"/>
                            </Grid>
                            <Grid DockPanel.Dock="Top" Margin="0,0,0,1">
                                <TextBlock Text="Coverage:" HorizontalAlignment="Left"/>
                                <TextBlock HorizontalAlignment="Right" Text="{Binding RamtestCoverage, Mode=OneWay, StringFormat={}{0:#######0 %}, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}">
                                    <FrameworkElement.ToolTip>
                                        <ToolTip>
                                            <FrameworkElement.Style>
                                                <Style TargetType="{x:Type ToolTip}">
                                                <Setter Property="UIElement.Visibility" Value="Hidden"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RamtestIsRunning, Mode=OneWay}" Value="True">
                                                        <Setter Property="UIElement.Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                </Style>
                                            </FrameworkElement.Style>
                                            <TextBlock>
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0:N0}% in {1}" ConverterCulture="{x:Static glob:CultureInfo.CurrentCulture}">
                                                        <Binding Path="RamtestNextFullCoveragePercent" Mode="OneWay" />
                                                        <Binding Path="RamtestNextFullCoverageIn" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </ToolTip>
                                  </FrameworkElement.ToolTip>
                                </TextBlock>
                            </Grid>
                            <Grid DockPanel.Dock="Top" Margin="0,0,0,4">
                                <TextBlock Text="Error Count:" HorizontalAlignment="Left"/>
                                <TextBlock HorizontalAlignment="Right" Text="{Binding RamtestErrorCount, Mode=OneWay}">
                                    <FrameworkElement.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Setter Property="Control.Foreground" Value="#339966"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RamtestErrorCount, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=0}" Value="True">
                                                    <Setter Property="Control.Foreground" Value="Red"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </FrameworkElement.Style>
                                </TextBlock>
                            </Grid>
                            <Grid DockPanel.Dock="Top" Margin="0,0,0,1">
                                <TextBlock Text="Test Speed:" HorizontalAlignment="Left"/>
                                <TextBlock HorizontalAlignment="Right">
                                    <FrameworkElement.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Setter Property="Text" Value="0 MB/s"/>
                                            <Setter Property="Control.Foreground" Value="Gray"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RamtestIsRunning, Mode=OneWay}" Value="True">
                                                    <Setter Property="Control.Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RamtestSpeed, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=0}" Value="True">
                                                    <Setter Property="Text" Value="{Binding RamtestSpeed, Mode=OneWay, StringFormat='{}{0:N3} MB/s', ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </FrameworkElement.Style>
                                </TextBlock>
                            </Grid>
                            <Grid DockPanel.Dock="Top" Margin="0,0,0,0">
                                <TextBlock Text="Max Speed:" HorizontalAlignment="Left"/>
                                <TextBlock HorizontalAlignment="Right">
                                    <FrameworkElement.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Setter Property="Text" Value="0 MB/s"/>
                                            <Setter Property="Control.Foreground" Value="Gray"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RamtestIsRunning, Mode=OneWay}" Value="True">
                                                    <Setter Property="Control.Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RamtestMaxSpeed, Mode=OneWay, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=0}" Value="True">
                                                    <Setter Property="Text" Value="{Binding RamtestMaxSpeed, Mode=OneWay, StringFormat='{}{0:N3} MB/s', ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </FrameworkElement.Style>
                                </TextBlock>
                            </Grid>
                        </DockPanel>
                    </GroupBox>
                    <Button x:Name="StartStopButton" DockPanel.Dock="Bottom" Margin="5,5,5,5">
                        <FrameworkElement.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="ContentControl.Content" Value="Start"/>
                                <Setter Property="Command" Value="{Binding RamtestStartCommand}"/>
                                <Setter Property="IsDefault" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RamtestIsRunning, Mode=TwoWay}" Value="True">
                                        <Setter Property="ContentControl.Content" Value="Stop"/>
                                        <Setter Property="Command" Value="{Binding RamtestStopCommand}"/>
                                        <Setter Property="IsDefault" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </FrameworkElement.Style>
                    </Button>
                </DockPanel>
            </TabItem>
            <TabItem Header="Advanced">
                <DockPanel LastChildFill="false">
                    <GroupBox DockPanel.Dock="Top" Header="Advanced" HorizontalAlignment="Stretch" Margin="5,0,5,0">
                        <DockPanel Margin="5,5,5,5">
                            <Grid DockPanel.Dock="Top" Margin="0,0,0,2">
                                <TextBlock Text="CPU Cache" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <ComboBox Width="120" HorizontalAlignment="Right" ItemsSource="{Binding RamtestCpuCacheModes}" SelectedItem="{Binding RamtestCpuCacheMode, Mode=TwoWay}"/>
                            </Grid>
                            <Grid DockPanel.Dock="Top">
                                <TextBlock Text="RNG" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <ComboBox Width="120" HorizontalAlignment="Right" ItemsSource="{Binding RamtestRngModes}" SelectedItem="{Binding RamtestRngMode, Mode=TwoWay}"/>
                            </Grid>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox DockPanel.Dock="Top" Header="Experimental" HorizontalAlignment="Stretch" Margin="5,0,5,0">
                        <DockPanel Margin="5,5,5,5">
                            <CheckBox Content="Stress FPU" IsChecked="{Binding RamtestStressFpu, Mode=TwoWay}"/>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox DockPanel.Dock="Top" Header="Sounds" HorizontalAlignment="Stretch" Margin="5,0,5,0">
                        <DockPanel Margin="5,5,5,5" LastChildFill="false">
                            <Grid DockPanel.Dock="Top" Margin="0,0,0,2">
                                <CheckBox Content="Beep on error" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding RamtestBeepOnError, Mode=TwoWay}"/>
                            </Grid>
                        </DockPanel>
                    </GroupBox>
                </DockPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Window>